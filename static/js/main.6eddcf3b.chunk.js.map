{"version":3,"sources":["App.js","index.js"],"names":["padTime","time","toString","padStart","App","useState","title","setTitle","timeLeft","setTimeLeft","isRunning","setIsRunning","intervalRef","useRef","resetTimer","clearInterval","current","minutes","Math","floor","seconds","className","onClick","setInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uJAGMA,G,KAAU,SAACC,GACf,OAAOA,EAAKC,WAAWC,SAAS,EAAG,OAGtB,SAASC,IAAO,IAAD,EAEFC,mBAAS,8BAFP,mBAErBC,EAFqB,KAEdC,EAFc,OAGIF,mBAAS,MAHb,mBAGrBG,EAHqB,KAGXC,EAHW,OAIMJ,oBAAS,GAJf,mBAIrBK,EAJqB,KAIVC,EAJU,KAKtBC,EAAcC,iBAAO,MAwBrBC,EAAa,WACjBC,cAAcH,EAAYI,SAC1BT,EAAS,8BACTE,EAAY,MACZE,GAAa,IAGTM,EAAUjB,EAAQkB,KAAKC,MAAMX,EAAW,IAAIN,WAAWC,SAAS,EAAG,MACnEiB,EAAUpB,EAAQQ,EAAqB,GAAVS,GAAcf,WAAWC,SAAS,EAAG,KAExE,OACE,yBAAKkB,UAAU,OACb,4BAAKf,GAEL,yBAAKe,UAAU,SACb,8BAAOJ,GACP,mCACA,8BAAOG,IAGT,yBAAKC,UAAU,YACXX,GAAa,4BAAQY,QA3CV,WACU,OAAxBV,EAAYI,UACfT,EAAS,uBACTI,GAAa,GACbC,EAAYI,QAAUO,aAAY,WAChCd,GAAY,SAAAD,GACV,OAAGA,GAAY,EAAUA,EAAW,GACpCM,IACO,QAER,QAiCgB,SACdJ,GAAa,4BAAQY,QA/BV,WACW,OAAxBV,EAAYI,UAEfD,cAAcH,EAAYI,SAC1BJ,EAAYI,QAAU,KACtBT,EAAS,eACTI,GAAa,MAyBK,QACd,4BAAQW,QAASR,GAAjB,WCvDRU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.6eddcf3b.chunk.js","sourcesContent":["import React, {useRef, useState} from 'react';\nimport './App.css';\n\nconst padTime = (time) => {\n  return time.toString().padStart(2, '0')\n}\n\nexport default function App() {\n\n  const [title, setTitle] = useState('Let the countdown begin!!!');\n  const [timeLeft, setTimeLeft] = useState(25 * 60);\n  const [isRunning, setIsRunning] = useState(false);\n  const intervalRef = useRef(null);\n\n  const startTimer = () => {\n    if(intervalRef.current !== null) return;\n    setTitle(`You're doing great!`);\n    setIsRunning(true);\n    intervalRef.current = setInterval(() => {\n      setTimeLeft(timeLeft => {\n        if(timeLeft >= 1) return timeLeft - 1;\n        resetTimer();\n        return 0;\n      });\n    }, 1000);\n  };\n\n  const stopTimer = () => {\n    if(intervalRef.current === null) return;\n\n    clearInterval(intervalRef.current);\n    intervalRef.current = null;\n    setTitle('Keep it up!');\n    setIsRunning(false);\n  };\n\n  const resetTimer = () => {\n    clearInterval(intervalRef.current);\n    setTitle('Ready to go another round?');\n    setTimeLeft(25 * 60);\n    setIsRunning(false);\n  };\n\n  const minutes = padTime(Math.floor(timeLeft / 60).toString().padStart(2, '0'));\n  const seconds = padTime(timeLeft - minutes * 60).toString().padStart(2, '0');\n\n  return (\n    <div className=\"app\">\n      <h2>{title}</h2>\n\n      <div className=\"timer\">\n        <span>{minutes}</span>\n        <span>:</span>\n        <span>{seconds}</span>\n      </div>\n\n      <div className=\"buttons\">\n        {!isRunning && <button onClick={startTimer}>Start</button>}\n        {isRunning && <button onClick={stopTimer}>Stop</button>}\n        <button onClick={resetTimer} >Reset</button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}